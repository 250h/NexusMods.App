<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:icons="clr-namespace:NexusMods.Icons;assembly=NexusMods.Icons">
    <Design.PreviewWith>
        <Border Width="1000" Height="300">
            <Menu VerticalAlignment="Top">
                <MenuItem Header="First" IsSubMenuOpen="True">
                    <MenuItem Header="Item" />
                    <MenuItem Header="Disabled" IsEnabled="False" />
                    <Separator/>
                    <MenuItem Header="Selected" IsSelected="True" />
                </MenuItem>
                <MenuItem Header="Second"/>
                <MenuItem Header="Third" IsSubMenuOpen="True">
                    <MenuItem Header="With Icon">
                        <MenuItem.Icon>
                            <icons:UnifiedIcon Value="{x:Static icons:IconValues.Code}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator/>

                    <MenuItem Header="With Radio 1" ToggleType="Radio" GroupName="Group" IsChecked="True"/>
                    <MenuItem Header="With Radio 2" ToggleType="Radio" GroupName="Group"/>

                    <Separator/>

                    <MenuItem Header="With CheckBox" ToggleType="CheckBox" IsChecked="True"/>
                </MenuItem>
            </Menu>
        </Border>

    </Design.PreviewWith>

    <Style Selector="MenuItem">
        <!--
        https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/MenuItem.xaml
        https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/MenuItem.cs
        -->

        <Style Selector="^ /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{StaticResource SurfaceMid}"/>
            <Setter Property="CornerRadius" Value="{StaticResource Rounded}"/>
        </Style>

        <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
            <Setter Property="Foreground" Value="{StaticResource NeutralModerate}"/>
        </Style>

        <!-- Hover state (yes, this is using :selected) -->
        <Style Selector="^:selected">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{StaticResource SurfaceTop}" />
            </Style>

            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralStrong}"/>
            </Style>
        </Style>

        <!-- Pressed state -->
        <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background" Value="{StaticResource SurfaceLow}"/>
            <Style Selector="^ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralSubdued}"/>
            </Style>
        </Style>

        <!-- Disabled state -->
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{StaticResource SurfaceMid}"/>
                <Setter Property="Opacity" Value="{StaticResource OpacityDisabledElement}"/>
            </Style>

            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralModerate}"/>
            </Style>
        </Style>
    </Style>

</Styles>
